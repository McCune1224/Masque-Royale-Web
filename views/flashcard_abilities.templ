package views

import "github.com/labstack/echo/v4"
import "github.com/mccune1224/betrayal-widget/data"
import "strings"

templ FlashcardAbilities(c echo.Context, abilities []*data.AnyAbility) {
	@Base() {
		<div class="container mx-auto leading-normal tracking-normal bg-zinc-900 text-white py-5 sm:px-20">
			<span class="htmx-indicator">
				<p>Looking...</p>
			</span>
			<div class="flex flex-col">
				<button class="bg-zinc-500 hover:bg-zinc-700 text-white font-bold py-2 px-4 rounded-full">
					<a href="/flashcard">Search Roles</a>
				</button>
				<h3 class="text-5xl">
					Search Abilities
				</h3>
			</div>
			<input
				class="form-control text-black px-5 py-5 w-full"
				name="search"
				type="search"
				placeholder="name, category, rarity..."
				hx-post="/search/aa"
				hx-trigger="input changed delay:300ms, search"
				hx-target="#search-results"
				hx-indicator=".htmx-indicator"
			/>
			<section id="search-results" class="grid grid-flow-row-dense grid-cols-1 sm:grid-cols-2 gap-3">
				for _, ability := range abilities {
					@AbilityCard(c, ability)
				}
			</section>
		</div>
	}
}

templ AbilityCard(c echo.Context, ability *data.AnyAbility) {
	<div class={ "flex flex-col gap-3 bg-zinc-800 text-white text-xl border-2 px-3" }>
		<span><p class="underline">Name</p> <p class="font-extrabold text-3xl">{ ability.Name }</p></span>
		<span>
			<p class="underline">
				Categories: 
			</p>
			<div class="flex flex-col gap-1">
				<span><p class="font-extrabold text-3xl">{ strings.Join(ability.Categories, ", ") }</p></span>
			</div>
		</span>
		<span>
			<p class="underline">
				Rarity: 
			</p>
			<div class="flex flex-col gap-1">
				<span><p class="font-extrabold text-3xl">{ ability.Rarity }</p></span>
			</div>
		</span>
		<span>
			<p class="underline">
				Description: 
			</p>
			<div class="flex flex-col gap-1">
				<span><p class="font-extrabold text-3xl">{ ability.Description }</p></span>
			</div>
		</span>
	</div>
}

templ SearchAAs(c echo.Context, abilities []*data.AnyAbility) {
	@Base() {
		for _, aa := range abilities {
			@AbilityCard(c, aa)
		}
	}
}
