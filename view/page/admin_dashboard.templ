package page

import "github.com/labstack/echo/v4"
import "github.com/mccune1224/betrayal-widget/view/template"
import "github.com/mccune1224/betrayal-widget/view/components/buttons"
import "github.com/mccune1224/betrayal-widget/data"
import "github.com/mccune1224/betrayal-widget/view/components/errors"
import "github.com/mccune1224/betrayal-widget/util"
import "strconv"
import "github.com/mccune1224/betrayal-widget/view/components/text"
import "github.com/mccune1224/betrayal-widget/view/components/inputs"
import "github.com/mccune1224/betrayal-widget/view/components/navbars"

templ AdminDashboard(c echo.Context, players []*data.ComplexPlayer, roleList []string, actions []data.ComplexPlayerRequest, err ...string) {
	@template.Base() {
		<main class="flex flex-col gap-2">
			@text.Title("Admin Dashboard", true)
			@text.Title("Player Creation", true)
			<form
				hx-post={ util.GamePath(c) + "/players" }
				hx-target="#player-list"
				hx-swap="outerHTML"
				hx-on::after-request="this.reset()"
				class="flex flex-col gap-2 justify-center bg-zinc-800 border-purple-700 border-2 rounded-lg py-3 px-10"
			>
				<label>Player Name</label>
				@inputs.Input("player", true)
				<label>Select a Role</label>
				<select required name="role" class="bg-gray-200 border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500">
					<option disabled selected value>-- -- </option>
					for _, roleName := range roleList {
						<option class="text-black">{ roleName }</option>
					}
				</select>
				@button.SubmitButton("Add Player")
			</form>
			@ActionDashboard(c, actions)
			@text.Title("Current Players", true)
			<div class="flex flex-col gap-2 justify-center bg-zinc-800 border-purple-700 border-2 rounded-lg py-3 px-1">
				@PlayerList(c, players)
			</div>
		</main>
		@navbars.HomeNavbar()
	}
}

templ PlayerList(c echo.Context, players []*data.ComplexPlayer, err ...string) {
	if len(err) > 0 {
		@errors.ErrorCard(err[0])
	}
	<div id="player-list" class="flex flex-col gap-3 sm:grid sm:grid-cols-2">
		for _, player := range players {
			@PlayerCard(c, player)
		}
	</div>
}

templ PlayerCard(c echo.Context, player *data.ComplexPlayer) {
	<div id={ "player-" + player.P.Name } class={ "px-5 py-1 flex flex-col " + CSSAliveTransparency(player) }>
		<div class="flex gap-1 text-xl">
			<p>{ player.P.Name }</p>
			<p>{ player.R.Name }</p>
		</div>
		<div class="flex gap-1">
			if player.P.Alive {
				@button.HxPostButton("Mark Dead", util.PlayerPath(c, strconv.Itoa(player.P.ID))+"/death", "#player-"+player.P.Name)
			} else {
				@button.HxPostButton("Mark Alive", util.PlayerPath(c, strconv.Itoa(player.P.ID))+"/death", "#player-"+player.P.Name)
			}
			@button.HxDeleteButton("Delete", util.GamePath(c)+"/players/"+strconv.Itoa(player.P.ID), strconv.Itoa(player.P.ID), "#player-list")
		</div>
	</div>
}

func CSSAliveTransparency(player *data.ComplexPlayer) string {
	if !player.P.Alive {
		return "opacity-40 "
	}
	return " "
}

templ AdminActionCard(c echo.Context, index int, action data.ComplexPlayerRequest) {
	<div class="flex flex-col gap-2">
		//span flex to equal spacing
		<div class="flex text-xl justify-center gap-2">
			<span class="">#{ strconv.Itoa(index + 1) }</span>
			<span>{ action.P.P.Name }, { action.A.AbilityName }, { "@" + action.R.Target }</span>
		</div>
		@button.HxDeleteButton("Delete/Resolve", util.PlayerPath(c, strconv.Itoa(action.P.P.ID)+"/actions/"+strconv.Itoa(action.R.ID)), strconv.Itoa(action.R.ID), "#action-cards")
	</div>
}

templ ActionQueue(c echo.Context, actionQueue []data.ComplexPlayerRequest) {
	<div id="action-cards" class="flex flex-col gap-2">
		for i, action := range actionQueue {
			@AdminActionCard(c, i, action)
			<br/>
		}
	</div>
}

templ ActionDashboard(c echo.Context, actionQueue []data.ComplexPlayerRequest) {
	@text.Title("Action Queue", true)
	<div class="flex flex-col gap-2 justify-center bg-zinc-800 border-purple-700 border-2 rounded-lg py-3 px-1">
		@ActionQueue(c, actionQueue)
	</div>
}
