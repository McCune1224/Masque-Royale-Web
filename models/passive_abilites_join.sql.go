// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: passive_abilites_join.sql

package models

import (
	"context"
)

const createRolePassiveJoin = `-- name: CreateRolePassiveJoin :one
INSERT INTO role_passives_join (
  role_id, passive_id
) VALUES (
  $1, $2
) RETURNING role_id, passive_id
`

type CreateRolePassiveJoinParams struct {
	RoleID    int32 `json:"role_id"`
	PassiveID int32 `json:"passive_id"`
}

func (q *Queries) CreateRolePassiveJoin(ctx context.Context, arg CreateRolePassiveJoinParams) (RolePassivesJoin, error) {
	row := q.db.QueryRow(ctx, createRolePassiveJoin, arg.RoleID, arg.PassiveID)
	var i RolePassivesJoin
	err := row.Scan(&i.RoleID, &i.PassiveID)
	return i, err
}

const getRolePassiveJoin = `-- name: GetRolePassiveJoin :one
SELECT role_passives_join.role_id, role_passives_join.passive_id, passive_details.id, passive_details.name, passive_details.description
FROM role_passives_join
JOIN passive_details ON role_passives_join.passive_id = passive_details.id
`

type GetRolePassiveJoinRow struct {
	RolePassivesJoin RolePassivesJoin `json:"role_passives_join"`
	PassiveDetail    PassiveDetail    `json:"passive_detail"`
}

func (q *Queries) GetRolePassiveJoin(ctx context.Context) (GetRolePassiveJoinRow, error) {
	row := q.db.QueryRow(ctx, getRolePassiveJoin)
	var i GetRolePassiveJoinRow
	err := row.Scan(
		&i.RolePassivesJoin.RoleID,
		&i.RolePassivesJoin.PassiveID,
		&i.PassiveDetail.ID,
		&i.PassiveDetail.Name,
		&i.PassiveDetail.Description,
	)
	return i, err
}
