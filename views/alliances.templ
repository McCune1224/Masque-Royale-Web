package views

import "github.com/mccune1224/betrayal-widget/views/components/navbar"
import "github.com/labstack/echo/v4"
import "github.com/mccune1224/betrayal-widget/data"
import "github.com/mccune1224/betrayal-widget/util"

func ColorChoices(alliances []*data.Alliance) []string {

	var colorChoices = []string{"blue", "purple", "orange", "pink", "teal", "sky", "lime", "rose", "amber"}
	removes := []string{}
	for _, alliance := range alliances {
		removes = append(removes, alliance.Color)
	}

	newChoices := util.RemoveValues(colorChoices, removes)
	colorChoices = newChoices
	return newChoices
}

func PlayerChoices(players []*data.ComplexPlayer, alliances []*data.Alliance, reverse ...bool) []*data.ComplexPlayer {
	// check if the player is already in an alliance, if not, add them to the list
	var choices []*data.ComplexPlayer
	for _, player := range players {
		var inAlliance bool
		for _, alliance := range alliances {
			for _, member := range alliance.Members {
				if member == player.P.Name {
					inAlliance = true
				}
			}
		}
		if !inAlliance {
			choices = append(choices, player)
		}
	}

  if len(reverse) > 0 {
    for i, j := 0, len(choices)-1; i < j; i, j = i+1, j-1 {
      choices[i], choices[j] = choices[j], choices[i]
    }
  }



	return choices
}

templ AllianceCards(c echo.Context, alliances []*data.Alliance) {
	for _, alliance := range alliances {
		<div class="rounded-lg p-4 my-4">
			<h1 class={ "text-2xl font-bold bg-" + alliance.Color + "-400" }>{ alliance.Name }</h1>
			<div class="flex justify-center gap-4">
				<div class="flex flex-col">
					<h3 class="text-lg font-bold">Change Alliance Color (currently { alliance.Color })</h3>
					<select hx-post={ util.GetGameIDURL(c) + "/alliances/color" } hx-target="#alliance-cards" name="color" class="text-black p-2 m-2">
						for _, color := range ColorChoices(alliances) {
							<option value={ alliance.Name + "-" + color }>{ color }</option>
						}
					</select>
				</div>
				<button hx-delete={ util.GetGameIDURL(c) + "/alliances/delete?name=" + alliance.Name } hx-target="#alliance-cards" class="bg-blue-500 hover:bg-blue-700 text-white font-bold px-4 rounded">Delete Alliance</button>
			</div>
		</div>
		<hr/>
	}
}

templ AllianceDashboard(c echo.Context, alliances []*data.Alliance, players []*data.ComplexPlayer) {
	@Base() {
		@navbar.VerticalNavbar(c)
		<div class="container mx-auto px-4 text-center">
			// Nice tailwincss form to add a new alliance (needs a name, and 4 drop downs for the players to add)
			<form hx-post={ util.GetGameIDURL(c) + "/alliances/new" } hx-target="#alliance-cards">
				<div class="flex flex-col gap-6 p-4 my-4 text-black">
					<div>
						<h1 class="text-2xl font-bold text-white">Create New Alliance</h1>
						<div class="flex justify-center">
							<input
								required
								type="text"
								name="name"
								placeholder="Alliance Name"
								class="rounded-lg p-2 m-2"
							/>
						</div>
					</div>
					<div>
						<h3 class="text-lg text-white font-bold ">Select Players</h3>
						<div class="flex justify-center">
								<select name={ "player1" } class="rounded-lg p-2 m-2">
									for _, player := range PlayerChoices(players, alliances) {
										<option value={ player.P.Name }>{ player.P.Name }</option>
									}
								</select>
								<select name={ "player2" } class="rounded-lg p-2 m-2">
									for _, player := range PlayerChoices(players, alliances, true) {
										<option value={ player.P.Name }>{ player.P.Name }</option>
									}
								</select>
						</div>
					</div>
					<div>
						<h3 class="text-lg text-white font-bold ">Select Alliance Color</h3>
						<select name="color" class="rounded-lg p-2 m-2">
							for _, color := range ColorChoices(alliances) {
								<option value={ color }>{ color }</option>
							}
						</select>
					</div>
					// Dropdown menu to select a color for the alliance
					<div class="flex justify-center">
						<button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
							Create Alliance
						</button>
					</div>
				</div>
			</form>
			<div id="alliance-cards">
				@AllianceCards(c, alliances)
			</div>
		</div>
	}
}
