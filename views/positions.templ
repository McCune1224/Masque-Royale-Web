package views

import "github.com/labstack/echo/v4"
import "strconv"
import "github.com/mccune1224/betrayal-widget/data"
import "github.com/mccune1224/betrayal-widget/views/components"

func rotateCSSGenerator(players []*data.ComplexPlayer) []string {
	res := []string{}
	for i := 0; i < len(players); i++ {
		foo := strconv.Itoa(360 / len(players) * i)
		bar := "absolute transform h-64 sm:h-96 w-1  bg-transparent rotate-[" + foo + "deg]"
		res = append(res, bar)
	}
	return res
}

func RotateAngleCSS(count int, position int, reverse bool) string {
	if reverse {
		return "rotate-[" + strconv.Itoa((360/count*position)*-1) + "deg]"
	}
	return "rotate-[" + strconv.Itoa(360/count*position) + "deg]"
}

func cssScale(playerCount int, limit int) string {
	if playerCount > limit {
		return "scale-75"
	}
	return ""
}

func cssBorderColor(role *data.Role) string {
	switch role.Alignment {
	case "LAWFUL":
		return "border-green-500"
	case "CHAOTIC":
		return "border-red-500"
	case "OUTLANDER":
		return "border-yellow-500"
	default:
		return "border-black-200"
	}
}

templ PlayerToken(player *data.ComplexPlayer, classes string) {
	<div class={ classes + " border-2 " + cssBorderColor(&player.R) }>
		<p>{ player.P.Name }</p>
		<p>{ player.R.Name  }</p>
		<p>{ strconv.Itoa(player.P.Luck) }</p>
	</div>
}

templ Positions(c echo.Context, players []*data.ComplexPlayer) {
	<ul id="player-wheel" class="sm:py-48 list-none flex justify-center items-center h-64 w-64 bg-transparent rounded-full mx-auto">
		for i, v := range rotateCSSGenerator(players) {
			<li class={ v }>
				// small circle
				@components.Dropdown(c, players[i].P.Name, PlayerToken(players[i], "sm:w-24 sm:h-24 w-16 h-16 bg-gray-900 rounded-full text-white "+RotateAngleCSS(len(players), i, true)+cssScale(len(players), 9)))
			</li>
		}
	</ul>
}
