package page

import "github.com/mccune1224/betrayal-widget/view/template"
import "github.com/labstack/echo/v4"
import "github.com/mccune1224/betrayal-widget/data"
import "github.com/mccune1224/betrayal-widget/view/components/text"
import "github.com/mccune1224/betrayal-widget/view/components/buttons"
import "strconv"
import "strings"

templ PlayerFlashcard(c echo.Context, player *data.Player, role *data.ComplexRole, gameRoles []*data.ComplexRole) {
	@template.Base(c) {
		@text.Title("About Your Role", true)
		@RoleCard(c, role)
		@text.Title("Role/Ability Description Lookup", true)
		@RoleLookup(c)
		@AbilityLookup(c)
		@PlayerRoleResults(c, gameRoles)
		@AbilityResults(c, nil)
	}
}

func splitArray(target string, arr []string) (before string, middle string, after string) {
	var index int
	for i, val := range arr {
		if val == target {
			index = i
			break
		}
	}

	before = strings.Join(arr[:index], " ")
	after = strings.Join(arr[index+1:], " ")
	return before, target, after
}

templ Highlight(left string, middle string, right string) {
	<p>{ left }<b class="text-xl text-red-400">{ middle }</b>{ right }</p>
}

templ PlayerRoleResults(c echo.Context, roles []*data.ComplexRole, search ...string) {
	<section id="role-search-results">
		for _, role := range roles {
			if len(search) > 0 {
				@RoleSearchResult(c, role, search[0])
			} else {
				@RoleSearchResult(c, role, search[0])
			}
		}
	</section>
}

templ AbilityResults(c echo.Context, abilities []*data.AbilityFlashcardSearch) {
	<section id="ability-search-results">
		for _, ability := range abilities {
			@AbilityCard(c, ability)
		}
	</section>
}

templ AbilityCard(c echo.Context, ability *data.AbilityFlashcardSearch) {
	<section
		class="flex flex-col justify-center bg-zinc-800 border-2 border-white px-2 rounded-lg"
	>
		<div class="py-5">
			<p class="text-3xl italic">{ ability.Name }</p>
			<p>{ ability.Description }</p>
			<div class="flex flex-row">
				for _, cat := range ability.Categories {
					<p>{ cat }</p>
				}
			</div>
			<p>Associated Roles: </p>
			for _, roleName := range ability.AssociatedRoles {
				<p>{ roleName }</p>
			}
			<hr/>
		</div>
	</section>
}

templ RoleSearchResult(c echo.Context, role *data.ComplexRole, search ...string) {
	<section class="flex flex-col justify-center bg-zinc-800 border-2 border-white px-2 rounded-lg">
		<div class="py-5">
			<p class="text-3xl italic">{ role.Name }</p>
			<p>{ role.Alignment }</p>
			<hr/>
		</div>
		<label class="text-2xl italic">Abilities</label>
		<div class="flex flex-col py-2 gap-2">
			for _, ability := range role.Abilities {
				<div>
					<p class="font-bold">{ ability.Name } [{ strconv.Itoa(ability.Charges) }] ({ strings.Join(ability.Categories, " -- ") })</p>
					<p>{ ability.Description }</p>
				</div>
			}
			<hr/>
		</div>
		<label class="text-2xl italic">Passives</label>
		<div class="flex flex-col py-2 gap-4">
			for _, passive := range role.Passives {
				<div>
					<p class="font-bold">{ passive.Name }</p>
					<p>{ passive.Description }</p>
				</div>
			}
		</div>
	</section>
}

templ RoleLookup(c echo.Context) {
	<form
		class="flex flex-col gap-2 justify-center bg-zinc-800 border-purple-500 border-2 rounded-lg py-3 px-10"
		hx-post={ c.Request().URL.String() + "/roles" }
		hx-target="#role-search-results"
	>
		<h3 class="text-4xl">Role Search</h3>
		<label class="text-2xl">Name</label>
		<input name="name" class="text-black" type="text"/>
		<label class="text-2xl">Description</label>
		<input name="description" class="text-black" type="text"/>
		@button.SubmitButton("Search Role")
	</form>
}

templ AbilityLookup(c echo.Context) {
	<form
		class="flex flex-col gap-2 justify-center bg-zinc-800 border-purple-500 border-2 rounded-lg py-3 px-10"
		hx-post={ c.Request().URL.String() + "/abilities" }
		hx-target="#ability-search-results"
	>
		<h3 class="text-4xl">Ability Search</h3>
		<label class="text-2xl">Name</label>
		<input name="name" class="text-black" type="text"/>
		<label class="text-2xl">Description</label>
		<input name="description" class="text-black" type="text"/>
		<label class="text-2xl">Category</label>
		<input name="category" class="text-black" type="text"/>
		@button.SubmitButton("Search Ability")
	</form>
}
